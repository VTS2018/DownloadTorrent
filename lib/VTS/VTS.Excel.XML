<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VTS.Excel</name>
    </assembly>
    <members>
        <member name="T:VTS.Excel.AppConfig">
            <summary>
            系统配置类，获取系统配置的配置参数
            此类实现了IConfigurationSectionHandler接口
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfig.m_configValues">
            <summary>
            设置应用系统配置段，在各应用系统中实例化。
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfig.m_configApp">
            <summary>
            配置的键值对
            </summary>
        </member>
        <member name="M:VTS.Excel.AppConfig.#ctor">
            <summary>
            初始化 AppConfiguration 类的新实例。
            </summary>
        </member>
        <member name="M:VTS.Excel.AppConfig.#ctor(System.String)">
            <summary>
            初始化 AppConfiguration 类的新实例。
            </summary>
            <param name="sectionName">默认读取的段的名称。</param>
        </member>
        <member name="M:VTS.Excel.AppConfig.GetConfig(System.String)">
            <summary>
             获取某段配置中的配置信息（为名称值的配置段）。
            </summary>
            <param name="sectionName">配置段的名称Z</param>
            <returns>配置段中的名称值对。</returns>
        </member>
        <member name="M:VTS.Excel.AppConfig.GetDllConfiguration">
            <summary>
            获取dll对应的配置
            </summary>
            <param name="targetAsm"></param>
            <returns></returns>
        </member>
        <member name="M:VTS.Excel.AppConfig.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            创建新的配置处理程序并将其添加到节处理程序集合中。
            </summary>
            <param name="parent">对应父配置节中的配置设置。</param>
            <param name="configContext">配置节处理程序为其计算配置值的虚拟路径。通常，该参数是保留参数，并为空引用（Visual Basic 中为 Nothing）。 </param>
            <param name="section">包含要处理的配置信息的 XmlNode。提供对配置节 XML 内容的直接访问。</param>
            <returns>一个 NameValueCollection。</returns>
        </member>
        <member name="P:VTS.Excel.AppConfig.SectionName">
            <summary>
            获取或设置配置段名。
            </summary>
        </member>
        <member name="P:VTS.Excel.AppConfig.AppSettings">
            <summary>
            获取appSettings配置段里的内容。	<add key="MaxSheelSize" value="80000"/>	
            </summary>
        </member>
        <member name="P:VTS.Excel.AppConfig.ModuleConfigSettings">
            <summary>
            获取或设置用户指定配置段里的内容和默认内容的并集（默认为appSettings里的内容）。
            </summary>
        </member>
        <member name="P:VTS.Excel.AppConfig.DllConfigFilePath">
            <summary>
            封装多一遍, 确保调用本方法的方法为Dll内部方法, 从而取得正确的Dll配置文件路径
            否则可能取得的是执行程序(主程序)的路径
            </summary>
        </member>
        <member name="T:VTS.Excel.AppConfigKey">
            <summary>
            配置文件中配置节点的名称
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfigKey.ExcelVersionKey">
            <summary>
            Excel版本配置键
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfigKey.ExcelTypeKey">
            <summary>
            Excel类型对照表配置键
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfigKey.DefaultTypeKey">
            <summary>
            Excel类型对照表中的默认类型配置键
            </summary>
        </member>
        <member name="F:VTS.Excel.AppConfigKey.MaxSheelSize">
            <summary>
            默认每个Excel页中可存的最大数据条数配置键
            </summary>
        </member>
        <member name="T:VTS.Excel.ExcelFile">
            <summary>
            Excel文件操作类。
            </summary>
        </member>
        <member name="M:VTS.Excel.ExcelFile.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:VTS.Excel.ExcelFile.#ctor">
            <summary>
            无参构造函数
            </summary>
        </member>
        <member name="M:VTS.Excel.ExcelFile.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="excelVersion">Excel文档版本，使用ExcelVersion类型。</param>
        </member>
        <member name="M:VTS.Excel.ExcelFile.Import">
            <summary>
            导入DataSource到Excel中
            </summary>
        </member>
        <member name="M:VTS.Excel.ExcelFile.GetData(System.Boolean)">
            <summary>
            获取Excel中的数据
            </summary>
            <param name="bMerge">多表数据是否合并</param>
            <returns>DataTable集合</returns>
        </member>
        <member name="M:VTS.Excel.ExcelFile.SetData(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            写数据到Excel。
            </summary>
            <param name="dtSource">数据源</param>
            <param name="filePath">Excel导出路径</param>
            <param name="excelVersion">excel版本，为ExcelVersion类型</param>
            <param name="pHDR">第一行是否标题，为HDRType类型</param>
        </member>
        <member name="M:VTS.Excel.ExcelFile.GetData(System.String,System.String,System.String,System.Boolean)">
            <summary>
            从Excel读数据
            </summary>
            <param name="filePath">excel文档路径</param>
            <param name="excelVersion">文档版本</param>
            <param name="pHDR">第一行是否标题</param>
            <param name="bMerge">
            如果有多页，是否合并数据，合并时必须保证多页的表结构一致
            </param>
            <returns>DataTable集</returns>
        </member>
        <member name="M:VTS.Excel.ExcelFile.GetExcelWorkSheets(System.String,System.String)">
            <summary>
            返回指定文件所包含的工作簿列表;如果有WorkSheet，就返回以工作簿名字命名的ArrayList，否则返回空
            </summary>
            <param name="filePath">要获取的Excel</param>
            <param name="excelVersion">文档版本</param>
            <returns>如果有WorkSheet，就返回以工作簿名字命名的string[]，否则返回空</returns>
        </member>
        <member name="M:VTS.Excel.ExcelFile.CreateExcelFile(System.String,System.String,System.String)">
            <summary>
            创建Excel文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="excelVersion">excel版本</param>
            <param name="excelVersion">创建sheet的脚本</param>
        </member>
        <member name="M:VTS.Excel.ExcelFile.CreateExcelColums(System.Data.DataTable)">
            <summary>
            构建Excel列脚本。
            格式如：Name VarChar，CreateDate Date
            </summary>
            <param name="dtSource"></param>
            <returns></returns>
        </member>
        <member name="M:VTS.Excel.ExcelFile.GetExcelTypeByDataColumn(System.Data.DataColumn)">
            <summary>
            获取DataColumn对应的Excel列类型
            </summary>
            <param name="dc">源数据的列</param>
            <returns>Excel列类型名称</returns>
        </member>
        <member name="M:VTS.Excel.ExcelFile.GetOleDbTypeByDataColumn(System.Data.DataColumn)">
            <summary>
            获取DataColumn对应的Excel列类型
            </summary>
            <param name="dc">源数据的列</param>
            <returns>Excel列类型名称</returns>
        </member>
        <member name="P:VTS.Excel.ExcelFile.Version">
            <summary>
            获取或设置Excel文档版本号。
            为ExcelVersion类型的值。
            </summary>
        </member>
        <member name="P:VTS.Excel.ExcelFile.HDR">
            <summary>
            获取或设置HDR类型。
            </summary>
        </member>
        <member name="P:VTS.Excel.ExcelFile.FilePath">
            <summary>
            获取或设置Excel文件路径。
            </summary>
        </member>
        <member name="P:VTS.Excel.ExcelFile.DataSource">
            <summary>
            获取或设置数据源。
            </summary>
        </member>
        <member name="T:VTS.Excel.ExcelVersion">
            <summary>
            Excel文档版本类型。
            对于 Microsoft Excel 12.0 (2007) 工作簿，请使用 Excel 12.0。 
            对于 Microsoft Excel 8.0 (97)、9.0 (2000) 和 10.0 (2002) 工作簿，请使用 Excel 8.0。 
            对于 Microsoft Excel 5.0 和 7.0 (95) 工作簿，请使用 Excel 5.0。 
            对于 Microsoft Excel 4.0 工作簿，请使用 Excel 4.0。 
            对于 Microsoft Excel 3.0 工作簿，请使用 Excel 3.0。
            </summary>
        </member>
        <member name="F:VTS.Excel.ExcelVersion.Excel3">
            <summary>
            Excel3.0版文档格式
            </summary>
        </member>
        <member name="F:VTS.Excel.ExcelVersion.Excel4">
            <summary>
            Excel4.0版文档格式
            </summary>
        </member>
        <member name="F:VTS.Excel.ExcelVersion.Excel5">
            <summary>
            Excel5.0版文档格式，适用于 Microsoft Excel 5.0 和 7.0 (95) 工作簿
            </summary>
        </member>
        <member name="F:VTS.Excel.ExcelVersion.Excel8">
            <summary>
            Excel8.0版文档格式，适用于Microsoft Excel 8.0 (98-2003) 工作簿
            </summary>
        </member>
        <member name="F:VTS.Excel.ExcelVersion.Excel12">
            <summary>
            Excel12.0版文档格式，适用于Microsoft Excel 12.0 (2007) 工作簿
            </summary>
        </member>
        <member name="T:VTS.Excel.HDRType">
            <summary>
            HDR类型，用于标识第一行是否标题。
            </summary>
        </member>
        <member name="F:VTS.Excel.HDRType.Yes">
            <summary>
            HDR=Yes，这代表第一行是标题，不做为数据使用
            </summary>
        </member>
        <member name="F:VTS.Excel.HDRType.No">
            <summary>
            HDR=NO，则表示第一行不是标题，做为数据来使用
            </summary>
        </member>
        <member name="T:VTS.Excel.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:VTS.Excel.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:VTS.Excel.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:VTS.Excel.Resources._2003">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:VTS.Excel.Resources._2007">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
